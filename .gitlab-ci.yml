variables:
  APP_NAME: "scriptlist"
  APP_VERSION: 1.0.0
  NAMESPACE: app
  REGISTRY: "docker.io"
  REPOSITORY: "scriptcat/list"
  GO111MODULE: "on"
  GOPROXY: "https://goproxy.cn,direct"
  GOPATH: "$CI_PROJECT_DIR/.cache"
  GOLANGCI_LINT_CACHE: "$CI_PROJECT_DIR/.lint-cache"

stages:
  - test
  - build
  - docker
#  - deploy

test-job:
  stage: test
  image: golang:1.18
  cache:
    key: go-cache
    paths:
      - .cache
  script:
    - go test -v ./...

lint-job:
  stage: test
  image: golangci/golangci-lint:v1.46
  cache:
    key: go-cache
    paths:
      - .cache
      - .lint-cache
  script:
    - golangci-lint run

build:
  stage: build
  image: golang:1.18-alpine3.16
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == 'dev'
  cache:
    key: go-cache
    paths:
      - .cache
  script:
      - CGO_ENABLE=0 GOOS=linux GOARCH=amd64 go build -o $APP_NAME ./cmd/app
  artifacts:
    expire_in: 1 week
    paths:
      - $APP_NAME

build-docker:
  stage: docker
  image: docker:rc
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == 'dev'
  variables:
    DOCKER_HOST: tcp://docker-dind:2375
  before_script:
    - docker login $REGISTRY --username $DOCKER_USERNAME --password $DOCKER_PASSWORD

  script:
    - docker build . --build-arg APP_NAME=$APP_NAME -f deploy/docker/Dockerfile -t $REGISTRY/$REPOSITORY:$CI_COMMIT_SHORT_SHA
    - docker push $REGISTRY/$REPOSITORY:$CI_COMMIT_SHORT_SHA
#
#deploy-job:
#  stage: deploy
#  image: alpine/helm:3.9.0
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#    - if: $CI_COMMIT_BRANCH == 'dev'
#  script:
#    - cd deploy/helm
#    - helm upgrade --install --namespace $NAMESPACE $APP_NAME . --kubeconfig $K3S_CONFIG --set image.tag=$CI_COMMIT_SHORT_SHA --set image.repository=$REGISTRY/$REPOSITORY --set etcdConfig.password=$ETCD_CONFIG_PASSWORD
