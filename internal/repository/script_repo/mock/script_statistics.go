// Code generated by MockGen. DO NOT EDIT.
// Source: script_statistics.go
//
// Generated by this command:
//
//	mockgen -source=script_statistics.go -destination=mock/script_statistics.go
//

// Package mock_script_repo is a generated GoMock package.
package mock_script_repo

import (
	context "context"
	reflect "reflect"

	entity "github.com/scriptscat/scriptlist/internal/model/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockScriptStatisticsRepo is a mock of ScriptStatisticsRepo interface.
type MockScriptStatisticsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockScriptStatisticsRepoMockRecorder
}

// MockScriptStatisticsRepoMockRecorder is the mock recorder for MockScriptStatisticsRepo.
type MockScriptStatisticsRepoMockRecorder struct {
	mock *MockScriptStatisticsRepo
}

// NewMockScriptStatisticsRepo creates a new mock instance.
func NewMockScriptStatisticsRepo(ctrl *gomock.Controller) *MockScriptStatisticsRepo {
	mock := &MockScriptStatisticsRepo{ctrl: ctrl}
	mock.recorder = &MockScriptStatisticsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScriptStatisticsRepo) EXPECT() *MockScriptStatisticsRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockScriptStatisticsRepo) Create(ctx context.Context, scriptStatistics *entity.ScriptStatistics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, scriptStatistics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockScriptStatisticsRepoMockRecorder) Create(ctx, scriptStatistics any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockScriptStatisticsRepo)(nil).Create), ctx, scriptStatistics)
}

// Delete mocks base method.
func (m *MockScriptStatisticsRepo) Delete(ctx context.Context, id int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockScriptStatisticsRepoMockRecorder) Delete(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockScriptStatisticsRepo)(nil).Delete), ctx, id)
}

// Find mocks base method.
func (m *MockScriptStatisticsRepo) Find(ctx context.Context, id int64) (*entity.ScriptStatistics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", ctx, id)
	ret0, _ := ret[0].(*entity.ScriptStatistics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockScriptStatisticsRepoMockRecorder) Find(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockScriptStatisticsRepo)(nil).Find), ctx, id)
}

// FindByScriptID mocks base method.
func (m *MockScriptStatisticsRepo) FindByScriptID(ctx context.Context, scriptId int64) (*entity.ScriptStatistics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByScriptID", ctx, scriptId)
	ret0, _ := ret[0].(*entity.ScriptStatistics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByScriptID indicates an expected call of FindByScriptID.
func (mr *MockScriptStatisticsRepoMockRecorder) FindByScriptID(ctx, scriptId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByScriptID", reflect.TypeOf((*MockScriptStatisticsRepo)(nil).FindByScriptID), ctx, scriptId)
}

// IncrDownload mocks base method.
func (m *MockScriptStatisticsRepo) IncrDownload(ctx context.Context, scriptId int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrDownload", ctx, scriptId)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrDownload indicates an expected call of IncrDownload.
func (mr *MockScriptStatisticsRepoMockRecorder) IncrDownload(ctx, scriptId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrDownload", reflect.TypeOf((*MockScriptStatisticsRepo)(nil).IncrDownload), ctx, scriptId)
}

// IncrScore mocks base method.
func (m *MockScriptStatisticsRepo) IncrScore(ctx context.Context, scriptId, score int64, num int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrScore", ctx, scriptId, score, num)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrScore indicates an expected call of IncrScore.
func (mr *MockScriptStatisticsRepoMockRecorder) IncrScore(ctx, scriptId, score, num any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrScore", reflect.TypeOf((*MockScriptStatisticsRepo)(nil).IncrScore), ctx, scriptId, score, num)
}

// IncrUpdate mocks base method.
func (m *MockScriptStatisticsRepo) IncrUpdate(ctx context.Context, scriptId int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrUpdate", ctx, scriptId)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrUpdate indicates an expected call of IncrUpdate.
func (mr *MockScriptStatisticsRepoMockRecorder) IncrUpdate(ctx, scriptId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrUpdate", reflect.TypeOf((*MockScriptStatisticsRepo)(nil).IncrUpdate), ctx, scriptId)
}

// Update mocks base method.
func (m *MockScriptStatisticsRepo) Update(ctx context.Context, scriptStatistics *entity.ScriptStatistics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, scriptStatistics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockScriptStatisticsRepoMockRecorder) Update(ctx, scriptStatistics any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockScriptStatisticsRepo)(nil).Update), ctx, scriptStatistics)
}
